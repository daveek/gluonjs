{"version":3,"sources":["gluon.js"],"names":["render","html","TAG","Symbol","NEEDSRENDER","SHADYTEMPLATE","applyShadyCSS","window","ShadyCSS","document","createElement","innerHTML","shadowRoot","prepareTemplate","localName","styleElement","camelToKebab","replace","toLowerCase","createIdCache","$","querySelectorAll","forEach","id","GluonElement","HTMLElement","is","name","connectedCallback","attachShadow","mode","sync","shadyTemplate","shadyPrepared","template","Promise","resolve","then"],"mappings":"AAAA,OAASA,MAAT,CAAiBC,IAAjB,KAA6B,yBAA7B,CAEA,OAASA,IAAT,EAEA,KAAMC,KAAMC,OAAO,KAAP,CAAZ,CACMC,YAAcD,OAAO,aAAP,CADpB,CAEME,cAAgBF,OAAO,eAAP,CAFtB,CAIMG,cAAgB,KAAW,CAC3BC,OAAOC,QADoB,GAEzB,EAAQH,aAAR,UAFyB,GAG3B,EAAQA,aAAR,EAAyBI,SAASC,aAAT,CAAuB,UAAvB,CAHE,CAI3B,EAAQL,aAAR,EAAuBM,SAAvB,CAAmC,EAAQC,UAAR,CAAmBD,SAJ3B,CAK3BH,SAASK,eAAT,CAAyB,EAAQR,aAAR,CAAzB,CAAiD,EAAQS,SAAzD,CAL2B,EAO7BN,SAASO,YAAT,GAP6B,CAShC,CAbD,CAeMC,aAAe,WAAgB,CACnC,MAAO,GAAMC,OAAN,CAAc,iCAAd,CAAiD,WAAjD,EAA8DC,WAA9D,EACR,CAjBD,CAmBMC,cAAgB,WAAkB,CACtC,EAAQC,CAAR,GADsC,CAEtC,EAAQR,UAAR,CAAmBS,gBAAnB,CAAoC,MAApC,EAA4CC,OAA5C,CAAoD,KAAM,CACxD,EAAQF,CAAR,CAAU,EAAGG,EAAb,GACD,CAFD,CAGD,CAxBD,CA0BA,MAAO,MAAMC,aAAN,QAA2BC,YAAY,CAC5C,UAAWC,GAAX,EAAgB,CACd,MAAO,MAAKxB,GAAL,IAAc,KAAKA,GAAL,EAAYc,aAAa,KAAKW,IAAlB,CAA1B,CACR,CACDC,mBAAoB,CACd,YAAc,KADA,GAEhB,KAAKC,YAAL,CAAkB,CAAEC,KAAM,MAAR,CAAlB,CAFgB,CAGhB,KAAK9B,MAAL,CAAY,CAAE+B,OAAF,CAAZ,CAHgB,CAKhB,KAAKC,aAAL,CAAqBvB,SAASC,aAAT,CAAuB,UAAvB,CALL,CAMhB,KAAKuB,aAAL,GANgB,CAQhBd,cAAc,IAAd,CARgB,CAUnB,CAKDnB,OAAO,CAAE+B,SAAF,IAAP,CAA8B,IAE1B,KAAK3B,WAAL,IAF0B,CAG1BJ,OAAO,KAAKkC,QAAZ,CAAsB,KAAKtB,UAA3B,CAH0B,CAI1BN,cAAc,IAAd,CAJ0B,EAKjB,CAAC,KAAKF,WAAL,CALgB,GAO1B,KAAKA,WAAL,IAP0B,CAQ1B+B,QAAQC,OAAR,GAAkBC,IAAlB,CAAuB,IAAM,CAEvB,KAAKjC,WAAL,CAFuB,GAGzB,KAAKA,WAAL,IAHyB,CAIzBJ,OAAO,KAAKkC,QAAZ,CAAsB,KAAKtB,UAA3B,CAJyB,CAKzBN,cAAc,IAAd,CALyB,CAO5B,CAPD,CAR0B,CAiB7B,CApC2C","file":"gluon.js","sourcesContent":["import { render, html } from '../lit-html/lit-html.js';\n\nexport { html };\n\nconst TAG = Symbol('tag');\nconst NEEDSRENDER = Symbol('needsRender');\nconst SHADYTEMPLATE = Symbol('shadyTemplate');\n\nconst applyShadyCSS = element => {\n  if (window.ShadyCSS) {\n    if (element[SHADYTEMPLATE] === undefined) {\n      element[SHADYTEMPLATE] = document.createElement('template');\n      element[SHADYTEMPLATE].innerHTML = element.shadowRoot.innerHTML;\n      ShadyCSS.prepareTemplate(element[SHADYTEMPLATE], element.localName);\n    }\n    ShadyCSS.styleElement(element);\n  }\n};\n\nconst camelToKebab = function(camel) {\n  return camel.replace(/([a-z])([A-Z])|(.)([A-Z][a-z])/g, '$1$3-$2$4').toLowerCase();\n};\n\nconst createIdCache = function(element) {\n  element.$ = {};\n  element.shadowRoot.querySelectorAll('[id]').forEach(el => {\n    element.$[el.id] = el;\n  });\n};\n\nexport class GluonElement extends HTMLElement {\n  static get is() {\n    return this[TAG] || (this[TAG] = camelToKebab(this.name));\n  }\n  connectedCallback() {\n    if ('template' in this) {\n      this.attachShadow({ mode: 'open' });\n      this.render({ sync: true });\n\n      this.shadyTemplate = document.createElement('template');\n      this.shadyPrepared = false;\n\n      createIdCache(this);\n    }\n  }\n  // Render the element's template.\n  // By default, renders are asynchronous and executed at the next microtask timing,\n  // so multiple render calls are batched.\n  // If the sync option is set to `true`, it renders syncrhonously instead.\n  render({ sync = false } = {}) {\n    if (sync) {\n      this[NEEDSRENDER] = false; // Cancel any existing render promise\n      render(this.template, this.shadowRoot);\n      applyShadyCSS(this);\n    } else if (!this[NEEDSRENDER]) {\n      // Debounce multiple render calls\n      this[NEEDSRENDER] = true;\n      Promise.resolve().then(() => {\n        // Abort if we canceled this render promise\n        if (this[NEEDSRENDER]) {\n          this[NEEDSRENDER] = false;\n          render(this.template, this.shadowRoot);\n          applyShadyCSS(this);\n        }\n      });\n    }\n  }\n}\n"]}