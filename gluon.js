import{render as t,html as e}from"../lit-html/lit-html.js";export{e as html};const a=Symbol("tag"),o=Symbol("needsRender"),n=Symbol("shadyTemplate"),s=t=>{window.ShadyCSS&&(void 0===t[n]&&(t[n]=document.createElement("template"),t[n].innerHTML=t.shadowRoot.innerHTML,ShadyCSS.prepareTemplate(t[n],t.localName)),ShadyCSS.styleElement(t))},i=function(t){return t.replace(/([a-z])([A-Z])|(.)([A-Z][a-z])/g,"$1$3-$2$4").toLowerCase()},h=function(t){t.$={},t.shadowRoot.querySelectorAll("[id]").forEach(e=>{t.$[e.id]=e})};export class GluonElement extends HTMLElement{static get is(){return this.hasOwnProperty(a)&&this[a]||(this[a]=i(this.name))}connectedCallback(){"template"in this&&(this.attachShadow({mode:"open"}),this.render({sync:!0}),h(this))}async render({sync:e=!1}={}){this[o]=!0,e||await 0,this[o]&&(this[o]=!1,t(this.template,this.shadowRoot),s(this))}};
//# sourceMappingURL=gluon.js.map
