import{render as t,html as e}from"../lit-html/lit-html.js";export{e as html};const o=Symbol("tag"),s=Symbol("needsRender"),n=Symbol("shadyTemplate"),a=t=>{if(window.ShadyCSS){const e=t.constructor;void 0===e[n]&&(e[n]=document.createElement("template"),e[n].innerHTML=t.shadowRoot.innerHTML,ShadyCSS.prepareTemplate(e[n],e.is)),ShadyCSS.styleElement(t)}},i=function(t){return t.replace(/([a-z])([A-Z])|(.)([A-Z][a-z])/g,"$1$3-$2$4").toLowerCase()},h=function(t){t.$={},t.shadowRoot.querySelectorAll("[id]").forEach(e=>{t.$[e.id]=e})};export class GluonElement extends HTMLElement{static get is(){return this.hasOwnProperty(o)&&this[o]||(this[o]=i(this.name))}connectedCallback(){"template"in this&&(this.attachShadow({mode:"open"}),this.render({sync:!0}),h(this))}async render({sync:e=!1}={}){this[s]=!0,e||await 0,this[s]&&(this[s]=!1,t(this.template,this.shadowRoot),a(this))}};
//# sourceMappingURL=gluon.js.map
