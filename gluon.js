import{render as t}from"../lit-html/lib/lit-extended.js";export{html}from"../lit-html/lib/lit-extended.js";const e=Symbol("tag"),s=Symbol("needsRender"),i=Symbol("shadyTemplate"),o=t=>{if(window.ShadyCSS){const e=t.constructor;void 0===e[i]&&(e[i]=document.createElement("template"),e[i].innerHTML=t.shadowRoot.innerHTML,ShadyCSS.prepareTemplate(e[i],e.is)),ShadyCSS.styleElement(t)}},a=t=>t.replace(/([a-z])([A-Z])|(.)([A-Z][a-z])/g,"$1$3-$2$4").toLowerCase(),n=t=>{t.$={},t.shadowRoot.querySelectorAll("[id]").forEach(e=>{t.$[e.id]=e})};class h extends HTMLElement{static get is(){return this.hasOwnProperty(e)&&this[e]||(this[e]=a(this.name))}connectedCallback(){"template"in this&&(this.attachShadow({mode:"open"}),this.render({sync:!0}),n(this))}async render({sync:e=!1}={}){this[s]=!0,e||await 0,this[s]&&(this[s]=!1,t(this.template,this.shadowRoot),o(this))}}export{h as GluonElement};
//# sourceMappingURL=gluon.js.map
