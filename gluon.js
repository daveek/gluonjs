import{render,html}from'../lit-html/lit-html.js';export{html};const TAG=Symbol('tag'),NEEDSRENDER=Symbol('needsRender'),SHADYTEMPLATE=Symbol('shadyTemplate'),applyShadyCSS=(a)=>{window.ShadyCSS&&(a[SHADYTEMPLATE]===void 0&&(a[SHADYTEMPLATE]=document.createElement('template'),a[SHADYTEMPLATE].innerHTML=a.shadowRoot.innerHTML,ShadyCSS.prepareTemplate(a[SHADYTEMPLATE],a.localName)),ShadyCSS.styleElement(a))},camelToKebab=function(a){return a.replace(/([a-z])([A-Z])|(.)([A-Z][a-z])/g,'$1$3-$2$4').toLowerCase()},createIdCache=function(a){a.$={},a.shadowRoot.querySelectorAll('[id]').forEach((b)=>{a.$[b.id]=b})};export class GluonElement extends HTMLElement{static get is(){return this[TAG]||(this[TAG]=camelToKebab(this.name))}connectedCallback(){'template'in this&&(this.attachShadow({mode:'open'}),this.render({sync:!0}),this.shadyTemplate=document.createElement('template'),this.shadyPrepared=!1,createIdCache(this))}render({sync:a=!1}={}){a?(this[NEEDSRENDER]=!1,render(this.template,this.shadowRoot),applyShadyCSS(this)):!this[NEEDSRENDER]&&(this[NEEDSRENDER]=!0,Promise.resolve().then(()=>{this[NEEDSRENDER]&&(this[NEEDSRENDER]=!1,render(this.template,this.shadowRoot),applyShadyCSS(this))}))}}
//# sourceMappingURL=gluon.js.map
